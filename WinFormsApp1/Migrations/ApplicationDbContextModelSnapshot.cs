// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WinFormsApp1.Data;

#nullable disable

namespace WinFormsApp1.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.25")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("WinFormsApp1.Models.Account", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("AccountClassId")
                        .HasColumnType("int");

                    b.Property<int>("AccountId")
                        .HasColumnType("int");

                    b.Property<decimal>("ClosingBalanceActive")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ClosingBalancePassive")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("OpeningBalanceActive")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("OpeningBalancePassive")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TurnoverCredit")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TurnoverDebit")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("AccountClassId");

                    b.ToTable("Accounts");
                });

            modelBuilder.Entity("WinFormsApp1.Models.AccountClass", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<decimal?>("BalanceClosingBalanceActive")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("BalanceClosingBalancePassive")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("BalanceOpeningBalanceActive")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("BalanceOpeningBalancePassive")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("BalanceTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("BalanceTurnoverCredit")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("BalanceTurnoverDebit")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("FileModelId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("FileModelId");

                    b.ToTable("AccountClasses");
                });

            modelBuilder.Entity("WinFormsApp1.Models.Balance", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("BalanceTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("ClosingBalanceActive")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ClosingBalancePassive")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("FileModelId")
                        .HasColumnType("int");

                    b.Property<decimal>("OpeningBalanceActive")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("OpeningBalancePassive")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TurnoverCredit")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TurnoverDebit")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("FileModelId")
                        .IsUnique()
                        .HasFilter("[FileModelId] IS NOT NULL");

                    b.ToTable("Balances");
                });

            modelBuilder.Entity("WinFormsApp1.Models.FileModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ColumnCount")
                        .HasColumnType("int");

                    b.Property<string>("FileName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RowCount")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UploadTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Files");
                });

            modelBuilder.Entity("WinFormsApp1.Models.Header", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("BankName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Currency")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("FileModelId")
                        .HasColumnType("int");

                    b.Property<string>("Period")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("PrintTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Subject")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("FileModelId")
                        .IsUnique()
                        .HasFilter("[FileModelId] IS NOT NULL");

                    b.ToTable("Headers");
                });

            modelBuilder.Entity("WinFormsApp1.Models.Account", b =>
                {
                    b.HasOne("WinFormsApp1.Models.AccountClass", "AccountClass")
                        .WithMany("ClassAccounts")
                        .HasForeignKey("AccountClassId");

                    b.Navigation("AccountClass");
                });

            modelBuilder.Entity("WinFormsApp1.Models.AccountClass", b =>
                {
                    b.HasOne("WinFormsApp1.Models.FileModel", "FileModel")
                        .WithMany("ClassList")
                        .HasForeignKey("FileModelId");

                    b.Navigation("FileModel");
                });

            modelBuilder.Entity("WinFormsApp1.Models.Balance", b =>
                {
                    b.HasOne("WinFormsApp1.Models.FileModel", "FileModel")
                        .WithOne("Balance")
                        .HasForeignKey("WinFormsApp1.Models.Balance", "FileModelId");

                    b.Navigation("FileModel");
                });

            modelBuilder.Entity("WinFormsApp1.Models.Header", b =>
                {
                    b.HasOne("WinFormsApp1.Models.FileModel", "FileModel")
                        .WithOne("Header")
                        .HasForeignKey("WinFormsApp1.Models.Header", "FileModelId");

                    b.Navigation("FileModel");
                });

            modelBuilder.Entity("WinFormsApp1.Models.AccountClass", b =>
                {
                    b.Navigation("ClassAccounts");
                });

            modelBuilder.Entity("WinFormsApp1.Models.FileModel", b =>
                {
                    b.Navigation("Balance");

                    b.Navigation("ClassList");

                    b.Navigation("Header");
                });
#pragma warning restore 612, 618
        }
    }
}
